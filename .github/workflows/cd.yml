name: cd

on:
  push:
    # Trigger this workflow only on commits pushed with a tag
    tags:
      - "v*"

jobs:
  cd-lint-build:
    name: Lint and build tests
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          profile: default

      - name: Clippy
        run: |
          cargo --version
          cargo clippy

      - name: Build
        run: |
          cargo build --release

  cd-release:
    name: Release
    needs:
      - cd-lint-build
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      # NB: Needed to run it locally with ACT
      - name: Install Github CLI
        if: ${{ env.ACT }}
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh

      - name: Create Github release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_VERSION: ${{ github.ref_name }}
        run: |
          echo $RELEASE_VERSION

        # gh release create $RELEASE_VERSION --title "Release $RELEASE_VERSION" --generate-notes --notes-file CHANGELOG_RELEASE.md

  cd-publish:
    name: Publish
    needs:
      - cd-release
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          profile: default

      - name: Publish to crates.io
        env:
          CRATESIO_TOKEN: ${{ secrets.CRATESIO_TOKEN }}
        run: cargo publish --token $CRATESIO_TOKEN
